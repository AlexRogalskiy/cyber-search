dependencyManagement {
    dependencies {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:$bootPluginVersion"
        }
        dependency("org.slf4j:slf4j-api:$slf4jVersion")
        dependency("ch.qos.logback:logback-classic:$lockbackVersion")

        dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
        dependency("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
        dependency("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
        dependency("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlinCoroutinesVersion")

        dependency("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
        dependency("com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion")
        dependency("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion") {
            exclude 'org.jetbrains.kotlin:kotlin-stdlib'
        }
        dependency("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion")
        dependency("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion")

        dependency("org.apache.httpcomponents:httpasyncclient:$apacheHttpClientVersion")

        dependency "org.springframework.kafka:spring-kafka:$springKafkaVersion"
        dependency "org.springframework.kafka:spring-kafka-test:$springKafkaVersion"
        dependency("org.apache.kafka:kafka-clients:$kafkaVersion")
        dependency("org.apache.kafka:kafka_2.11:$kafkaVersion")

        dependency("org.junit.jupiter:junit-jupiter-api:$junitVersion")
        dependency("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
        dependency("org.mockito:mockito-core:$mockitoVersion")
        dependency("org.assertj:assertj-core:$assertjVersion")
        dependency("com.nhaarman:mockito-kotlin:$mockitoKotlinVersion") {
            exclude 'org.jetbrains.kotlin:kotlin-stdlib'
        }

        dependency("org.ehcache:ehcache:$ehcacheVersion")

        dependency "org.springframework.data:spring-data-cassandra:$springCassandraVersion"
        dependency "org.springframework.data:spring-data-commons:$springCassandraVersion"
        dependency "org.cassandraunit:cassandra-unit-spring:$springCassandraUnitVersion"
        dependency("com.datastax.cassandra:cassandra-driver-core:$cassandraVersion")
        dependency("com.datastax.cassandra:cassandra-driver-mapping:$cassandraVersion")
        dependency("com.datastax.cassandra:cassandra-driver-extras:$cassandraVersion")

        dependency("org.web3j:core:$web3jVersion")
        dependency("org.web3j:parity:$web3jVersion")
        dependency("io.reactivex.rxjava2:rxkotlin:$rxkotlinVersion") {
            exclude 'org.jetbrains.kotlin:kotlin-stdlib'
        }
        dependency("io.projectreactor:reactor-core:$reactorVersion")
        dependency("io.projectreactor:reactor-test:$reactorVersion")

        dependency("io.micrometer:micrometer-core:$micrometerVersion")
        dependency("io.micrometer:micrometer-registry-prometheus:$micrometerVersion")
    }
}